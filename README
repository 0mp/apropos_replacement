Unix systems have had a culture and one of the main reasons behind
the long standing success of Unices has been to follow this culture
and philosophy over the years. Part of this culture and philosophy
is to provide documentation for each component of the Operating
System, whether it is a command line utility, a system call, a
library function, a configuration file or anything that should be
documented to make the life of the end user easier. This documentation
has been shipped with the base system in the form of Manual pages
(man pages in short), which can be easily accessed using the 'man'
command.  A couple of utilities are also provided to search the
documentation easily. apropos(1) can be used to search for man
pages. How apropos(1) works is very simple. The name section of
the man pages has been indexed in a file (typically named whatis.db)
and apropos(1) performs search on this file for the keywords
specified by the user.

While apropos(1) was designed keeping in mind the resources (both
hardware and software) available during the early days, but things
have changed drastically over the time. Now we have the resources
available and in the Google era it behooves us to rethink the design
and implementation of apropos(1). It is now possible to implement
apropos(1) in a better manner so as to allow more extensive and
flexible searches and that too over the complete content of the
man pages rather than limiting it to the name section. More often
than not we are not sure of the exact keywords to search for and
apropos(1) does not give us the right results (or no results at all)
in which case we turn to Google.

The idea behind this project is to mend this problem by reimplementing
apropos(1) to enable full text search capabilities and in the
process enhancing and modifying other man utilities as required.
We have decided to use the FTS engine of Sqlite [1] for this purpose.


